name: "Cybr Linux - Dawn Light Shines Upon the Arches"

on:
  workflow_dispatch:
    inputs:
      build_variant:
        description: "Build variant"
        required: false
        default: "standard"
        type: choice
        options: ["minimal", "standard", "full"]
  push:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * 0'

env:
  ISO_NAME: "cybr-arch-v${{ github.run_number }}"
  BUILD_VERSION: ${{ github.run_number }}

jobs:
  build:
    name: "Build Cybr Arch Linux"
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Free Disk Space"
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt-get clean

      - name: "Create Arch Build Environment"
        run: |
          cat > build.sh << 'BUILD_EOF'
          #!/bin/bash
          set -euo pipefail
          
          echo "Dawn light shines upon the arches..."
          
          # Install archiso
          pacman -Sy --noconfirm archiso git
          
          # Copy archiso profile
          cp -r /usr/share/archiso/configs/releng /tmp/cybr-build
          cd /tmp/cybr-build
          
          # Customize packages
          cat >> packages.x86_64 << 'PKGS_EOF'
          # Hyprland and Wayland
          hyprland
          xdg-desktop-portal-hyprland
          waybar
          wofi
          kitty
          dunst
          grim
          slurp
          wl-clipboard
          swaylock
          swayidle
          
          # Display manager
          sddm
          
          # Essential apps
          firefox
          thunar
          mousepad
          
          # Audio
          pipewire
          pipewire-pulse
          wireplumber
          pavucontrol
          
          # Network
          networkmanager
          network-manager-applet
          
          # Utilities
          
          htop
          git
          curl
          wget
          
          # Desktop utilities
          brightnessctl
          playerctl
          PKGS_EOF
          
          # Create Cybr branding
          cat > airootfs/etc/hostname << 'HOSTNAME_EOF'
          cybr-linux
          HOSTNAME_EOF
          
          cat > airootfs/etc/os-release << 'OS_EOF'
          NAME="Cybr Linux"
          PRETTY_NAME="Cybr Linux"
          ID=cybr
          ID_LIKE=arch
          BUILD_ID=rolling
          ANSI_COLOR="38;2;23;147;209"
          HOME_URL="https://wolfos.pages.dev/"
          SUPPORT_URL="https://wolfos.pages.dev/support"
          BUG_REPORT_URL="https://wolfos.pages.dev/issues"
          OS_EOF
          
          # Add Kali repos setup script
          mkdir -p airootfs/usr/local/bin
          cat > airootfs/usr/local/bin/setup-kali-repos << 'KALI_EOF'
          #!/bin/bash
          echo "Adding Kali Linux repositories..."
          
          # Add BlackArch repos (Arch equivalent of Kali tools)
          curl -O https://blackarch.org/strap.sh
          chmod +x strap.sh
          sudo ./strap.sh
          
          echo "BlackArch repositories added. Install tools with: sudo pacman -S <tool>"
          KALI_EOF
          chmod +x airootfs/usr/local/bin/setup-kali-repos
          
          # Install end-4 dotfiles on first boot
          mkdir -p airootfs/etc/skel/.config/autostart
          cat > airootfs/etc/skel/.config/autostart/cybr-setup.desktop << 'SETUP_EOF'
          [Desktop Entry]
          Type=Application
          Name=Cybr Setup
          Exec=/usr/local/bin/cybr-first-boot
          Hidden=false
          NoDisplay=false
          X-GNOME-Autostart-enabled=true
          SETUP_EOF
          
          cat > airootfs/usr/local/bin/cybr-first-boot << 'FIRST_BOOT_EOF'
          #!/bin/bash
          FLAG="$HOME/.config/cybr-setup-done"
          
          if [ ! -f "$FLAG" ]; then
            notify-send "Cybr Linux" "Setting up your system..." -i distributor-logo
            
            # Install end-4 dotfiles
            bash <(curl -s https://ii.clsty.link/setup) || true
            
            # Setup BlackArch repos
            /usr/local/bin/setup-kali-repos || true
            
            mkdir -p "$HOME/.config"
            touch "$FLAG"
            notify-send "Cybr Linux" "Setup complete! Restart Hyprland to apply changes." -i distributor-logo
          fi
          FIRST_BOOT_EOF
          chmod +x airootfs/usr/local/bin/cybr-first-boot
          
          # Download and install Neo hook
          curl -fsSL https://raw.githubusercontent.com/WolfTech-Innovations/Neo/main/lb-hooks/0201-Neo.chroot \
            -o airootfs/usr/local/bin/neo-setup
          chmod +x airootfs/usr/local/bin/neo-setup
          
          # Configure SDDM for Hyprland
          mkdir -p airootfs/etc/sddm.conf.d
          cat > airootfs/etc/sddm.conf.d/cybr.conf << 'SDDM_EOF'
          [General]
          DisplayServer=wayland
          
          [Wayland]
          SessionDir=/usr/share/wayland-sessions
          SDDM_EOF
          
          # Build the ISO
          mkarchiso -v -w work -o out .
          
          # Move ISO to workspace
          mv out/*.iso /workspace/$ISO_NAME.iso
          
          echo "Cybr Arch Linux ISO built successfully!"
          BUILD_EOF
          chmod +x build.sh

      - name: "Build ISO in Arch Container"
        run: |
          docker run --rm --privileged \
            -v $PWD:/workspace \
            -e ISO_NAME="${{ env.ISO_NAME }}" \
            archlinux:latest \
            bash /workspace/build.sh

      - name: "Validate ISO"
        id: validate
        run: |
          ISO_FILE="${{ env.ISO_NAME }}.iso"
          
          if [[ ! -f "$ISO_FILE" ]]; then
            echo "ERROR: ISO not found"
            exit 1
          fi
          
          SIZE=$(stat -c%s "$ISO_FILE")
          SIZE_MB=$(( SIZE / 1024 / 1024 ))
          SHA256=$(sha256sum "$ISO_FILE" | cut -d' ' -f1)
          
          echo "size=$SIZE" >> $GITHUB_OUTPUT
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT
          
          echo "ISO: $ISO_FILE"
          echo "Size: ${SIZE_MB} MB"
          echo "SHA256: $SHA256"

      - name: "Upload ISO"
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.ISO_NAME }}"
          path: "${{ env.ISO_NAME }}.iso"
          retention-days: 7

  upload:
    name: "Upload to SourceForge"
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    
    steps:
      - name: "Download ISO"
        uses: actions/download-artifact@v4
        with:
          name: "cybr-arch-v${{ github.run_number }}"

      - name: "Upload to SourceForge"
        env:
          SF_USER: ${{ secrets.SF_USER }}
          SF_PASS: ${{ secrets.SF_PASS }}
        run: |
          sudo apt-get install -y sshpass rsync
          
          ISO_FILE="cybr-arch-v${{ github.run_number }}.iso"
          
          sshpass -p "$SF_PASS" rsync -avP \
            -e "ssh -o StrictHostKeyChecking=no" \
            "./$ISO_FILE" \
            "$SF_USER@frs.sourceforge.net:/home/frs/project/wolfos/$ISO_FILE"
          
          echo "Upload complete!"

  notify:
    name: "Notify"
    runs-on: ubuntu-latest
    needs: [build, upload]
    if: always()
    
    steps:
      - name: "Summary"
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          # Cybr Linux - Arch Build Summary
          
          **Dawn light shines upon the arches** - Build completed!
          
          ## Features
          - Base: Arch Linux (rolling release)
          - Desktop: Hyprland + end-4 dotfiles
          - Security: BlackArch repositories (Kali equivalent)
          - Enhancements: Neo integration
          - ISO: cybr-arch-v${{ github.run_number }}.iso
          
          ## Downloads
          - [Artifact](../../actions/runs/${{ github.run_id }}#artifacts)
          - [SourceForge](https://sourceforge.net/projects/wolfos/)
          EOF