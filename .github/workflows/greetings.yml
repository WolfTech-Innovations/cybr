name: Build Cybr (NextGen)

on:
  workflow_dispatch:
    inputs:
      force_fail:
        description: "Force fail API"
        required: false
        default: "No"
        type: choice
        options: ["No", "Yes"]

jobs:
  build-os:
    runs-on: ubuntu-latest
    outputs:
      build_success: ${{ steps.set-status.outputs.success }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Build in Docker
        run: |
          # Create Dockerfile
          cat > Dockerfile << 'EOF'
          FROM kalilinux/kali-rolling

          RUN apt update && apt install -y \
              git curl debootstrap syslinux-utils isolinux xorriso \
              squashfs-tools mtools rsync sshpass live-build wget nano sed

          WORKDIR /build
          EOF

          # Build Docker image
          docker build -t cybr-builder .

          # Run build inside Docker
          docker run --rm -v $PWD:/build cybr-builder bash -c "
            git clone https://gitlab.com/kalilinux/build-scripts/live-build-config.git &&
            cd live-build-config &&

            # Configure ISO build
            echo 'LB_ISO_IMAGE_NAME=\"cybr\"' >> auto/config &&
            echo 'LB_ISO_VOLUME=\"cybr\"' >> auto/config &&
            echo 'LB_BUILD_WITH_CHROOT=\"true\"' >> auto/config &&
            echo 'LB_COMPRESSION=\"xz\"' >> auto/config &&
            echo 'LB_BOOTAPPEND_LIVE=\"boot=live components hostname=cybr username=root\"' >> auto/config &&

            # Add custom packages
            mkdir -p config/package-lists &&
            echo 'plasma-desktop sddm nano curl wget git nmap iptables ufw fail2ban clamav suricata psad rkhunter lynis tripwire wireshark policykit-1 hydra cewl theharvester dnsenum whois dnsutils john hashcat sqlmap gobuster dirb steghide binwalk radare2 exiftool' > config/package-lists/cybr.list.chroot &&

            # Add branding hook
            mkdir -p config/hooks/normal &&
     

            # Add rebrand + remove splash hook
            cat > config/hooks/normal/0030-rebrand-remove-splash.hook.chroot << 'HOOK_EOF'
            #!/bin/bash
            # Rebrand OS
            sed -i 's/Kali/Cybr/g' /etc/os-release
            sed -i 's/Kali/Cybr/g' /etc/issue

            # Remove boot splash (Plymouth)
            apt purge -y plymouth
            sed -i '/splash/d' /etc/default/grub
            update-grub || true
            HOOK_EOF
            chmod 755 config/hooks/normal/0030-rebrand-remove-splash.hook.chroot &&

            # Build the ISO
            bash ./build.sh --variant minimal --verbose &&

            # Move ISO to host
            mv images/kali-linux-rolling-live-minimal-amd64.iso /build/cybr.iso
          "

      - name: List ISO
        run: ls -lh cybr.iso

      - name: Upload to SourceForge
        env:
          SF_USER: ${{ secrets.SF_USER }}
          SF_PASS: ${{ secrets.SF_PASS }}
          OSVER: 2
        run: |
          sshpass -p "$SF_PASS" scp -o StrictHostKeyChecking=no ./cybr.iso "$SF_USER@frs.sourceforge.net:/home/frs/project/wolfos/Cybr-v${OSVER}.iso"

      - name: Set Build Status
        id: set-status
        run: |
          if [[ "${{ github.event.inputs.force_fail }}" == "Yes" ]]; then
            echo "success=false" >> $GITHUB_OUTPUT
          else
            echo "success=true" >> $GITHUB_OUTPUT

  notify-api:
    needs: build-os
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify API
        run: curl --max-time 30 "${{ secrets.API_URL }}"